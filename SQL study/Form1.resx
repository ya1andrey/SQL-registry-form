<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>